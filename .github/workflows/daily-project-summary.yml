name: Daily Project Summary
on:
  workflow_call:
    secrets:
      GEMINI_API_KEY:
        required: true
env:
  TMP_DIR: .github/actions-tmp
  SCRIPT_DIR: .github/actions-tmp/.github_automation/project_summary/scripts
  DOCS_DIR: generated-docs

jobs:
  generate-summary:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: read
      pull-requests: read

    steps:
      - name: Checkout repository # „Çµ„Éû„É™ÂØæË±°„ÇíÂèñÂæó„Åô„Çã„Åü„ÇÅ„ÄÅÂëº„Å≥Âá∫„ÅóÂÖÉ„É™„Éù„Ç∏„Éà„É™„Çícheckout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Â±•Ê≠¥„ÇíÂèñÂæó„Åô„Çã„Åü„ÇÅ

      - name: Checkout shared github-actions repo # „Çπ„ÇØ„É™„Éó„Éà„ÇíÂèñÂæó„Åô„Çã„Åü„ÇÅ„ÄÅÂÖ±Êúâ„ÅÆgithub-actions„É™„Éù„Ç∏„Éà„É™„Çícheckout
        uses: actions/checkout@v4
        with:
          repository: cat2151/github-actions
          path: ${{ env.TMP_DIR }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          mkdir -p ${{ env.TMP_DIR }}
          cd ${{ env.TMP_DIR }}
          npm init -y
          npm install @google/generative-ai @octokit/rest

      - name: for Verify generated files # ÁîüÊàêÂâç„ÅÆtimestamp„ÇÑfilesize„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØÁî®
        run: |
          ls -la ${{ env.DOCS_DIR }}/project-overview.md
          ls -la ${{ env.DOCS_DIR }}/development-status.md

      - name: Generate project summary
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          NODE_PATH: ${{ env.TMP_DIR }}/node_modules
        run: |
          mkdir -p ${{ env.DOCS_DIR }}
          node ${{ env.SCRIPT_DIR }}/generate-project-summary.cjs

      - name: Verify generated files # ÁîüÊàêÂæå„ÅÆtimestamp„ÇÑfilesize„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØÁî®
        run: |
          ls -la ${{ env.DOCS_DIR }}/project-overview.md
          ls -la ${{ env.DOCS_DIR }}/development-status.md

      - name: Check for generated summaries
        id: check_summaries
        run: |
          if [ -f "${{ env.DOCS_DIR }}/project-overview.md" ] && [ -f "${{ env.DOCS_DIR }}/development-status.md" ]; then
            echo "summaries_generated=true" >> $GITHUB_OUTPUT
          else
            echo "summaries_generated=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push summaries
        if: steps.check_summaries.outputs.summaries_generated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.DOCS_DIR }}/project-overview.md
          git add ${{ env.DOCS_DIR }}/development-status.md
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update project summaries (overview & development status)"
            git push
          fi

      - name: Summary generation result
        run: |
          if [ "${{ steps.check_summaries.outputs.summaries_generated }}" == "true" ]; then
            echo "‚úÖ Project summaries updated successfully"
            echo "üìä Generated: project-overview.md & development-status.md"
          else
            echo "‚ÑπÔ∏è No summaries generated (likely no user commits in the last 24 hours)"
          fi
